When would you want to use a remote repository rather than keeping all your work
local?

    I can think of three reasons:
      1) to facilitate collaboration, where your team is using GitHub
      2) to put your files online, so that you could access them from another machine
      3) to publish work for others to see

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Same reason you want to commit changes manually rather than automatically.
    Perhaps you are working on a new branch while others are also editing.
        You don't want their code to create conflicts with yours while you are working on it.
        Instead you want to resolve collisions at the time you choose to commit, 
            so that you can choose how to resolve them, if necessary.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork: copy a repo from someone else on GitHub into your own GitHub account
    Clone: copy a GitHub repo onto your local machine.
        Or it could be copying from your local machine to another location on your machine.
    Branch: create an offshoot within a repo for exploring coding alternatives.
        Branching is done within a repo.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    that way your local Git knows what the reference point is WRT the remote
    so it effectively creates two branches from that point: master and origin/master
    Then when merging, it has the correct reference point for checking version differences.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
